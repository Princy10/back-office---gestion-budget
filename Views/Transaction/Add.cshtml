@using gestion_budget.Services
@using gestion_budget.Models
@inject UserService UserService
@model gestion_budget.Models.Transaction
@{
    Layout = "_Layout";
    var UserId = UserService.GetUserId();
}

<div class="container mt-4">
    <h2 class="mb-4">Ajouter une Transaction</h2>

    @if (ViewBag.Categories == null || !((List<gestion_budget.Models.Category>)ViewBag.Categories).Any())
    {
        <div class="alert alert-warning">
            Aucune catégorie disponible. Veuillez ajouter des catégories avant de créer une transaction.
        </div>
    }
    else
    {
        <form asp-controller="Transaction" asp-action="Add" method="post">
            <div class="mb-3">
                <label for="CategoryId" class="form-label">Catégorie :</label>
                <select id="CategoryId" name="CategoryId" class="form-select" required>
                    <option value="">Sélectionnez une catégorie</option>
                    @foreach (var category in (List<gestion_budget.Models.Category>)ViewBag.Categories)
                    {
                        <option value="@category.CategoryId">@category.Name</option>
                    }
                </select>
                <span asp-validation-for="CategoryId" class="text-danger"></span>
            </div>
            <div class="mb-3" id="subCategoryContainer" style="display: none;">
                <label for="SubCategoryId" class="form-label">Sous-catégorie :</label>
                <select id="SubCategoryId" name="SubCategoryId" class="form-select">
                    <option value="">Sélectionnez une sous-catégorie</option>
                </select>
            </div>

            <input type="hidden" name="UserId" value="@UserId" />

            <div class="mb-3">
                <label for="Amount" class="form-label">Montant :</label>
                <input type="number" asp-for="Amount" name="Amount" step="0.01" class="form-control" required />
                <span asp-validation-for="Amount" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label for="TransactionDate" class="form-label">Date :</label>
                <input type="datetime-local" asp-for="TransactionDate" name="TransactionDate" class="form-control" required />
                <span asp-validation-for="TransactionDate" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label for="Note" class="form-label">Note :</label>
                <textarea asp-for="Note" name="Note" class="form-control" rows="4"></textarea>
                <span asp-validation-for="Note" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <button type="submit" class="btn btn-primary">Ajouter</button>
            </div>
        </form>


    }
</div>
<div class="container mt-4">
    <h2 class="mb-4">Uploader un fichier CSV</h2>
    <form id="csvForm">
        <div class="mb-3">
            <label for="csvFile" class="form-label">Fichier CSV :</label>
            <input type="file" id="csvFile" name="csvFile" accept=".csv" class="form-control" required />
        </div>
        <button type="button" id="uploadButton" class="btn btn-success">Charger</button>
    </form>

    <div id="messageContainer" class="mt-3"></div>

    <div id="dataTableContainer" class="mt-4" style="display:none;">
        <h4>Données extraites</h4>
        <table class="table" id="dataTable">
            <thead>
                <tr>
                    <th>Catégorie</th>
                    <th>Montant</th>
                    <th>Date</th>
                    <th>Note</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>

        <button type="button" id="sendDataButton" class="btn btn-primary">Insérer</button>
    </div>
</div>
<script>
    document.getElementById('CategoryId').addEventListener('change', function () {
        const categoryId = this.value;
        const subCategoryContainer = document.getElementById('subCategoryContainer');
        const subCategorySelect = document.getElementById('SubCategoryId');

        if (categoryId) {
            fetch(`/Transaction/GetSubCategories/${categoryId}`)
                .then(response => response.json())
                .then(data => {
                    subCategorySelect.innerHTML = '<option value="">Sélectionnez une sous-catégorie</option>';

                    data.forEach(subCategory => {
                        const option = document.createElement('option');
                        option.value = subCategory.categoryId;
                        option.textContent = subCategory.name;
                        subCategorySelect.appendChild(option);
                    });

                    subCategoryContainer.style.display = 'block';
                })
                .catch(error => {
                    console.error('Erreur lors du chargement des sous-catégories:', error);
                    subCategoryContainer.style.display = 'none';
                });
        } else {
            subCategoryContainer.style.display = 'none';
        }
    });

    document.getElementById('uploadButton').addEventListener('click', function () {
        const fileInput = document.getElementById('csvFile');
        const file = fileInput.files[0];

        if (!file) {
            document.getElementById('messageContainer').innerHTML =
                '<div class="alert alert-danger">Veuillez sélectionner un fichier CSV.</div>';
            return;
        }

        const formData = new FormData();
        formData.append('csvFile', file);

        fetch('/Transaction/UploadCsv', {
            method: 'POST',
            body: formData
        })
            .then(response => response.json())
            .then(data => {
                const messageContainer = document.getElementById('messageContainer');
                const dataTableContainer = document.getElementById('dataTableContainer');
                const dataTableBody = document.querySelector('#dataTable tbody');

                if (data.success) {
                    messageContainer.innerHTML = `<div class="alert alert-success">${data.message}</div>`;
                    dataTableContainer.style.display = 'block';

                    dataTableBody.innerHTML = '';
                    data.rows.forEach(row => {
                        const tr = document.createElement('tr');
                        row.forEach(cell => {
                            const td = document.createElement('td');
                            td.textContent = cell;
                            tr.appendChild(td);
                        });
                        dataTableBody.appendChild(tr);
                    });
                } else {
                    messageContainer.innerHTML = `<div class="alert alert-danger">${data.message}</div>`;
                    dataTableContainer.style.display = 'none';
                }
            })
            .catch(error => {
                document.getElementById('messageContainer').innerHTML =
                    `<div class="alert alert-danger">Erreur lors de l'envoi du fichier : ${error.message}</div>`;
            });
    });
    document.getElementById('sendDataButton').addEventListener('click', function () {
        const tableRows = document.querySelectorAll('#dataTable tbody tr');
        const data = [];

        tableRows.forEach(row => {
            const rowData = [];
            row.querySelectorAll('td').forEach(cell => {
                rowData.push(cell.textContent);
            });
            data.push(rowData);
        });

        if (data.length === 0) {
            document.getElementById('messageContainer').innerHTML =
                '<div class="alert alert-danger">Aucune donnée à envoyer.</div>';
            return;
        }

        fetch('/Transaction/InsertData', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(data)
        })
            .then(response => response.json())
            .then(data => {
                const messageContainer = document.getElementById('messageContainer');
                if (data.success) {
                    messageContainer.innerHTML = `<div class="alert alert-success">${data.message}</div>`;
                } else {
                    messageContainer.innerHTML = `<div class="alert alert-danger">${data.message}</div>`;
                }
            })
            .catch(error => {
                document.getElementById('messageContainer').innerHTML =
                    `<div class="alert alert-danger">Erreur lors de l'envoi des données : ${error.message}</div>`;
            });
    });
</script>
